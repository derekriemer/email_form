name: Deploy Docker App to Server

on:
  push:
    tags:
      - "prod-*"
      - "staging-*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ORIG_APP_NAME: email_form
      INTERNAL_PORT: 5000

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Determine environment
        id: env
        run: |
          TAG="${GITHUB_REF##*/}"
          if [[ "$TAG" == prod-* ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          elif [[ "$TAG" == staging-* ]]; then
            echo "env=staging" >> $GITHUB_OUTPUT
          else
            echo "Invalid tag prefix. Must be prod-* or staging-*"
            exit 1
          fi

      - name: Set secrets based on environment
        run: |
          if [[ "${{ steps.env.outputs.env }}" == "prod" ]]; then
            echo "SSH_USER=${{ secrets.SSH_USER_PROD }}" >> $GITHUB_ENV
            echo "DOCKER_PORT=${{ secrets.DOCKER_PORT_PROD }}" >> $GITHUB_ENV
          else
            echo "SSH_USER=${{ secrets.SSH_USER_STAGING }}" >> $GITHUB_ENV
            echo "DOCKER_PORT=${{ secrets.DOCKER_PORT_STAGING }}" >> $GITHUB_ENV
          fi

          echo "SSH_HOST=${{ secrets.SSH_HOST }}" >> $GITHUB_ENV
          echo "MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}" >> $GITHUB_ENV
          echo "MAILGUN_DOMAIN=${{ secrets.MAILGUN_DOMAIN }}" >> $GITHUB_ENV
          echo "RECIPIENT_EMAIL=${{ secrets.RECIPIENT_EMAIL }}" >> $GITHUB_ENV
          echo "APP_NAME=$TRUE_APP_NAME-$TAG" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          echo "$APP_NAME"
          docker build -t $APP_NAME:latest .

      - name: Save Docker image to archive
        run: |
          docker save $APP_NAME:latest | gzip > image.tar.gz

      - name: Upload Docker image to server
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          scp -i ~/.ssh/id_ed25519 image.tar.gz $SSH_USER@$SSH_HOST:/tmp/

      - name: Run deployment on server
        run: |
          ssh -i ~/.ssh/id_ed25519 $SSH_USER@$SSH_HOST <<EOF
          set -e
          docker stop $APP_NAME || true
          docker rm $APP_NAME || true
          gunzip -c /tmp/image.tar.gz | docker load
          docker run -d --name $APP_NAME \
            --restart=unless-stopped \
            -p 127.0.0.1:$DOCKER_PORT:$INTERNAL_PORT \
            -e MAILGUN_API_KEY="${MAILGUN_API_KEY}" \
            -e MAILGUN_DOMAIN="${MAILGUN_DOMAIN}" \
            -e RECIPIENT_EMAIL="${RECIPIENT_EMAIL}" \
            $APP_NAME:latest
          rm /tmp/image.tar.gz
          EOF
